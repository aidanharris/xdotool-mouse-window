#!/bin/sh

help() {
  cat <<EOF
Usage
‾‾‾‾‾
$ xdotool-mouse-window <command> [argument]…

Commands
‾‾‾‾‾‾‾‾
– get [format]: get mouse location
– move <x> <y> [window]: move mouse
– help: display a help message and quit
EOF
}

main() {
  # No command
  [ $# = 0 ] &&
  {
    help |
    die
  }
  # Command
  command=$1
  shift
  case $command in
    get)
      get "$@"
    ;;
    move)
      move "$@"
    ;;
    help)
      help
    ;;
    *)
      {
        echo "No such command: $command"
        help
      } |
      die
    ;;
  esac
}

move() {
  x=$1
  y=$2
  window=${3:-$(xdotool getactivewindow)}
  eval $(xdotool getwindowgeometry --shell $window)
  x=$(echo $WIDTH '*' $x | bc)
  y=$(echo $HEIGHT '*' $y | bc)
  xdotool mousemove --window $window $x $y
}

get() {
  format=${1:-$(echo '
    x: $x
    y: $y
    cx: $cx
    cy: $cy
    screen: $screen
    window: $window
  ' | sed '1d;$d;s/^ *//')}
  eval $(xdotool getactivewindow getwindowgeometry --shell)
  geometry_x=$X
  geometry_y=$Y
  geometry_width=$WIDTH
  geometry_height=$HEIGHT
  eval $(xdotool getmouselocation --shell)
  mouse_x=$X
  mouse_y=$Y
  window_mouse_x=$(echo $mouse_x - $geometry_x | bc)
  window_mouse_y=$(echo $mouse_y - $geometry_y | bc)
  coefficient_x=$(echo $window_mouse_x / $geometry_width | bc --mathlib)
  coefficient_y=$(echo $window_mouse_y / $geometry_height | bc --mathlib)
  echo "$format" |
  sed \
    --expression s/'$x'/$window_mouse_x/g \
    --expression s/'$y'/$window_mouse_y/g \
    --expression s/'$cx'/$coefficient_x/g \
    --expression s/'$cy'/$coefficient_y/g \
    --expression s/'$screen'/$SCREEN/g \
    --expression s/'$window'/$WINDOW/g
}

die() {
  status=${1:-1}
  [ $status = 0 ] && output=/dev/stdout || output=/dev/stderr
  cat > $output
  exit $status
}

main "$@"
